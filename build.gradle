group 'com.xiaoyue26'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application' //可选(可自动生成shell启动脚本)
apply plugin: 'war' // 生成war包


sourceCompatibility = 1.8

repositories {
    mavenLocal()
    maven { url 'http://repo1.maven.org/maven2' }//自定义maven仓库地址
    maven { url 'http://conjars.org/repo' }//自定义maven仓库地址
    jcenter()//新的中央远程仓库，兼容maven中心仓库
    mavenCentral()
}

mainClassName = 'readinglist.ReadingListApplication'
sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
    test {

        java {
            srcDirs = ['src/test/java']
        }
    }
}

task createDirs << { // 运行缩写: gradle cDirs
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

configurations {
    all*.exclude group:'org.springframework.boot',
            module:'spring-boot-starter-logging'
}

dependencies {

    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-web")
    // 第三章:日志
    compile('org.springframework.boot:spring-boot-starter-log4j2')
    compile('com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.6.0-rc4')
    // 异步日志:
    compile group: 'com.lmax', name: 'disruptor', version: '3.3.7'
    compile group: 'org.apache.logging.log4j', name: 'log4j-web', version: '2.7'



    //providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    // 想要右键直接运行就关闭上面那行runtime,否则打开(打开的话就可以打包后运行.)

    /*{
exclude module: "spring-boot-starter-tomcat"
}*/
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    //compile("com.h2database:h2")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    /*compile("org.springframework.boot:spring-boot-starter-web") {
        exclude group: 'com.fasterxml.jackson.core'
      } // 排除依赖示例
    * */
    // 第三章 安全:
    compile("org.springframework.boot:spring-boot-starter-security")
    // 第四章: 单元测试:
    testCompile("org.springframework.security:spring-security-test")
    // 第四章: 使用selenium进行测试:
    testCompile("org.seleniumhq.selenium:selenium-java:2.45.0")
    // 11.26: 配置mysql
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.44'
    // 11.28 尝试增加依赖:
    //optional "org.springframework.boot:spring-boot-configuration-processor"
    compile "org.springframework.boot:spring-boot-configuration-processor"

    // 增加redis支持
    compile "redis.clients:jedis:2.9.0"
    compile 'org.springframework.boot:spring-boot-starter-data-redis'

    // 增加rabitmap支持
    compile 'org.springframework.boot:spring-boot-starter-amqp'

    // 增加邮件支持:
    compile 'org.springframework.boot:spring-boot-starter-mail'
    //compile "javax.mail:mail:$javaxMailVersion"


}
//compileJava.dependsOn(processResources)

/*jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}*/


war {
    baseName = 'myapp'
    version = '0.0.1'
}


buildscript {
    ext {
        springBootVersion = '1.5.8.RELEASE'
    }
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.1"
    }
}

//apply plugin: "com.github.johnrengelman.shadow"
// grade shadowJar -- 这个不能生成运行包;gradle build可以.
/*
*  单独生成可执行jar或可部署war时,使用gradle build
*  生成lib包给别的项目依赖使用时,使用gradle shadowJar
* */
apply plugin: 'spring-boot'

// 编译 gradle compileScala
// 生成jar包: gradle jar
// 生成带启动脚本的可运行包: gradle installDist    缩写: gradle inD
// 运行命令:              sh build/install/july/bin/july

// 打包时分离各个jar包:  gradle inD
// 打包时合并成一个jar包: gradle shadowJar
// 简写 gradle shadowJ

// grade build生成可运行.